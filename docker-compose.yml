version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - ./data:/data
      - ./models:/models
    environment:
      - LLM_MODEL_PATH=/models/model.gguf
      # Set default to ollama to avoid llama.cpp integration issues
      - LLM_MODEL_TYPE=ollama
      - LLM_SERVER_URL=http://llm:8080
      - MAX_UPLOAD_SIZE=209715200
      - PYTHONUNBUFFERED=1
      - ENV=development
    depends_on:
      - llm
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.production
    ports:
      - "3001:80"
    depends_on:
      - backend
    restart: unless-stopped

  llm:
    image: ollama/ollama:latest
    ports:
      - "8090:8080" # API port for LLM server (changed to 8090 to avoid conflicts)
    volumes:
      - ./models:/models
      - ollama-models:/root/.ollama
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G
    environment:
      - OLLAMA_HOST=0.0.0.0:8080
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "--retry", "3", "http://localhost:8080"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

volumes:
  ollama-models: